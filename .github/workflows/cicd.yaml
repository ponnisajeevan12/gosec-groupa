name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  AZURE_WEBAPP_NAME: "goapp-groupa" # Replace with your Web App name
  AZURE_RESOURCE_GROUP: "GroupA-Week12" # Replace with your Azure resource group
  AZURE_AZURE_REGISTRY_NAME: "groupa" # Replace with your Azure Container Registry name
  DOCKER_IMAGE_NAME: "go-server:latest"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout Code
    - name: Checkout code
      uses: actions/checkout@v3

    # SonarQube Code Quality Analysis
    - name: Run SonarQube analysis
      env:
        SONAR_HOST_URL: "https://sonarcloud.io"
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
        unzip sonar-scanner.zip -d $HOME/
        export PATH="$HOME/sonar-scanner-4.8.0.2856-linux/bin:$PATH"
        sonar-scanner \
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
          -Dsonar.organization=${{ secrets.SONAR_ORG }} \
          -Dsonar.sources=. \
          -Dsonar.host.url=$SONAR_HOST_URL

    # Build and Dockerize Application
    - name: Build and Dockerize Application
      run: |
        docker build -t ${{ secrets.AZURE_AZURE_REGISTRY_NAME }}.azurecr.io/${{ env.DOCKER_IMAGE_NAME }}:latest .

    # Scan Docker Image with Trivy
    - name: Scan Docker Image with Trivy
      uses: aquasecurity/trivy-action@v0.12.1
      with:
        image-ref: ${{ secrets.AZURE_AZURE_REGISTRY_NAME }}.azurecr.io/${{ env.DOCKER_IMAGE_NAME }}:latest

    # Log in to Azure Container Registry (ACR)
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Push Docker Image to ACR
    - name: Push Docker Image to ACR
      run: |
        docker login ${{ secrets.AZURE_AZURE_REGISTRY_NAME }}.azurecr.io -u ${{ secrets.AZURE_REGISTRY_USERNAME }} -p ${{ secrets.AZURE_REGISTRY_PASSWORD }}
        docker push ${{ secrets.AZURE_AZURE_REGISTRY_NAME }}.azurecr.io/${{ env.DOCKER_IMAGE_NAME }}:latest

    # Deploy to Azure Web Apps
    - name: Deploy to Azure Web Apps
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        slot-name: "production"
        images: ${{ secrets.AZURE_AZURE_REGISTRY_NAME }}.azurecr.io/${{ env.DOCKER_IMAGE_NAME }}:latest